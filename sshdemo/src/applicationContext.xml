<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:config.properties" />
	</bean>
	
	<!-- 数据源配置 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <property name="hibernateProperties">
             <props>
                <prop key="hibernate.show_sql">
                    ${hibernate.show_sql}
                </prop>
                <prop key="hibernate.format_sql">
                    ${hibernate.format_sql}
                </prop>
                <prop key="hibernate.dialect">
                    ${hibernate.dialect}
                </prop>
                <prop key="hibernate.jdbc.use_streams_for_binary">
                    ${hibernate.jdbc.use_streams_for_binary}
                </prop>
                <!--是否要开启二级缓存-->
                <prop key="hibernate.cache.provider_class">
                    ${hibernate.cache.provider_class}
                </prop>
                <prop key="hibernate.cache.use_second_level_cache">
                    ${hibernate.cache.use_second_level_cache}
                </prop>
                <prop key="hibernate.cache.use_query_cache">
                    ${hibernate.cache.use_query_cache}
                </prop>
                <prop key="javax.persistence.validation.mode">none</prop> 
            </props>

        </property>
        <property name="packagesToScan" >
       		<list>
       			<value>com.kyl.domain</value>
       		</list>
       	</property> 
    </bean>
		

	<!-- A transaction manager for working with Hibernate SessionFactories -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
		
		
	<!-- 此为方式二/方式一为：使用@Transactional标注 -->
	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
	        <tx:method name="add*" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
	        <tx:method name="update*" propagation="REQUIRED" read-only="false"/>
	        <tx:method name="save*" propagation="REQUIRED" read-only="false"/>
	        <tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
<!-- 	那些类的哪些方法参与事务 -->
	<aop:config>
		<aop:pointcut id="allManagerMethod" expression="execution(public * com.kyl.service.*.*(..))"/>
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice"/>
	</aop:config>
	<bean id ="baseDao"  class ="com.kyl.dao.BaseDao" >    
		<property name ="sessionFactory" >    
			<ref bean ="sessionFactory"/>    
		</property>    
	</bean>
	<context:component-scan base-package="com.kyl.service"/> 
</beans>
